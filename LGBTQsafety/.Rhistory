setwd("C:/Users/purpl/OneDrive/Desktop/LGBTQsafe2")
library(devtools)
library(roxygen2)
library(usethis)
# 1. create the R package skeleton and choose name
devtools::create("LGBTQsafe")
# 2. adding a license
usethis:: use_ccby_license()
# 1. create the R package skeleton and choose name
devtools::create("LGBTQsafe2")
# 2. adding a license
usethis:: use_ccby_license()
setwd("C:/Users/purpl/OneDrive/Desktop/LGBTQsafe2")
# 2. adding a license
usethis:: use_ccby_license()
()
library(LGBTQsafety)
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
rlang::last_trace()
rlang::last_trace(drop = FALSE)
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
setwd("C:/Users/purpl/OneDrive/Documents/GitHub/Zetea-LGBTQsafety/LGBTQsafety/R")
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
library(LGBTQsafety)
sexuality_marriage_law("Colombia")
setwd("C:/Users/purpl/OneDrive/Documents/GitHub/Zetea-LGBTQsafety")
data = read.csv("PTNS_countries_LGBTQ.csv")
library(devtools)
library(roxygen2)
library(usethis)
setwd("C:/Users/purpl/OneDrive/Documents/GitHub/Zetea-LGBTQsafety")
data = read.csv("PTNS_countries_LGBTQ.csv")
setwd("C:/Users/purpl/OneDrive/Documents/GitHub/Zetea-LGBTQsafety/LGBTQsafety")
data = read.csv("PTNS_countries_LGBTQ.csv")
data
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
library(LGBTQsafety)
?sexuality_marriage_law
?gender_change_law
?sexuality_marriage_law
?gender_change_law
#' @title Sexuality Law Function
#'
#' @description Display whether same-sex marriage is legal in a given country
#'
#' @param country A string representing a country listed in the dataset column "Country".
#'
#' @return A short word or phrase describing whether gay marriage is legal or illegal.
#'
#' @examples
#' # Check whether same sex marriage is legal in Uganda
#' sexuality_marriage_law("Uganda")
#'
#' @note
#' Using this package requires the dataset "PTNS_countries_LGBTQ.csv" which can be found in the package on GitHub.
#'
#' @export
sexuality_marriage_law = function(country) {
if (country %in% data$Country) {
# Finds the row corresponding to the entered country
row_index <- which(data$Country == country)
# Return the value of same.sex.marriage to show laws for the country
return(data$same.sex.marriage[row_index])
} else {
return(paste("Country", country, "not available."))
}
}
?sexuality_marriage_law
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 7. your package can now be installed (by you and others!)
rm(list = ls())
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 7. your package can now be installed (by you and others!)
rm(list = ls())
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
devtools::install()
library(LGBTQsafety)
?sexuality_marriage_law
?gender_change_law
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 7. your package can now be installed (by you and others!)
rm(list = ls())
getwd()
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 7. your package can now be installed (by you and others!)
rm(list = ls())
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
setwd("C:/Users/purpl/OneDrive/Documents/GitHub/Zetea-LGBTQsafety/LGBTQsafety")
#set working directory to file with this dataset
data = read.csv("PTNS_countries_LGBTQ.csv")
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
devtools::install()
#set working directory to file with this dataset
data = read.csv("https://github.com/asarafoglou-ptns/Zetea-LGBTQsafety/blob/week1/LGBTQsafety/PTNS_countries_LGBTQ.csv")
data
data
data = read.csv("https://github.com/asarafoglou-ptns/Zetea-LGBTQsafety/blob/week1/LGBTQsafety/PTNS_countries_LGBTQ.csv", sep = ";")
data
#set working directory to file with this dataset
data = read.csv("https://raw.githubusercontent.com/asarafoglou-ptns/Zetea-LGBTQsafety/week1/LGBTQsafety/PTNS_countries_LGBTQ.csv")
data
more_information = function(country) {
if (country %in% data$Country) {
# Finds the row corresponding to the entered country
row_index <- which(data$Country == country)
# Return the value of gender.ID.expression to show laws for that country
return(data$anti.discrimination.laws.sexual.orientation[row_index])
} else {
return(paste("Country", country, "not available."))
}
}
more_information("Uganda")
# 7. your package can now be installed (by you and others!)
rm(list = ls())
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
devtools::install()
read_data = function(start) {
if (start == yes) {
# Reads the dataset from the R package LGBTQsafety
data <- read.csv("https://raw.githubusercontent.com/asarafoglou-ptns/Zetea-LGBTQsafety/week1/LGBTQsafety/PTNS_countries_LGBTQ.csv")
} else {
return(paste("Type yes to begin"))
}
}
read_data(yes)
read_data("yes")
read_data("yes")
read_data <- function(start) {
if (tolower(start) == "yes") {
url <- "https://raw.githubusercontent.com/asarafoglou-ptns/Zetea-LGBTQsafety/week1/LGBTQsafety/PTNS_countries_LGBTQ.csv"
# Attempt to download and read the CSV file
tryCatch({
data <- read.csv(url)
return(data)
}, error = function(e) {
return(paste("An error occurred while downloading the dataset:", e$message))
})
} else {
return("Type 'yes' to begin")
}
}
read_data(yes)
read_data("yes")
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
# 7. your package can now be installed (by you and others!)
rm(list = ls())
devtools::install()
library(LGBTQsafety)
?read_data
read_data("yes")
read_data("yes")
read_data(yes)
read_data('yes')
read_data <- function(start) {
if (tolower(start) == "yes") {
url <- "https://raw.githubusercontent.com/asarafoglou-ptns/Zetea-LGBTQsafety/week1/LGBTQsafety/PTNS_countries_LGBTQ.csv"
# Attempt to download and read the CSV file
tryCatch({
data <- read.csv(url)
return(data)
}, error = function(e) {
return(paste("An error occurred while downloading the dataset:", e$message))
})
} else {
return("Type 'yes' to begin")
}
}
read_data("yes")
library(LGBTQsafety)
read_data("yes")
gender_change_law("siberia")
gender_change_law("Uganda")
read_data("yes")
read_data <- function(start) {
if (tolower(start) == "yes") {
url <- "https://raw.githubusercontent.com/asarafoglou-ptns/Zetea-LGBTQsafety/week1/LGBTQsafety/PTNS_countries_LGBTQ.csv"
# Attempt to download and read the CSV file
tryCatch({
data <- read.csv(url)
assign("data", data, envir = .GlobalEnv)
return(data)
}, error = function(e) {
return(paste("An error occurred while downloading the dataset:", e$message))
})
} else {
return("Type 'yes' to begin")
}
}
read_data("yes")
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 7. your package can now be installed (by you and others!)
rm(list = ls())
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
devtools::install()
library(LGBTQsafety)
?read_data
read_data("yes")
gender_change_law("Uganda")
discrimination_law("Uganda")
install.packages("shiny")
install.packages("shiny")
library(shiny)
runExample("01_hello")
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
devtools::install()
library(shiny)
library(bslib)
# Define UI for app that draws a histogram ----
ui <- page_sidebar(
# App title ----
title = "Hello Shiny!",
# Sidebar panel for inputs ----
sidebar = sidebar(
# Input: Slider for the number of bins ----
sliderInput(
inputId = "bins",
label = "Number of bins:",
min = 1,
max = 50,
value = 30
)
),
# Output: Histogram ----
plotOutput(outputId = "distPlot")
)
# Define server logic required to draw a histogram ----
server <- function(input, output) {
# Histogram of the Old Faithful Geyser Data ----
# with requested number of bins
# This expression that generates a histogram is wrapped in a call
# to renderPlot to indicate that:
#
# 1. It is "reactive" and therefore should be automatically
#    re-executed when inputs (input$bins) change
# 2. Its output type is a plot
output$distPlot <- renderPlot({
x    <- faithful$waiting
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = "#007bc2", border = "white",
xlab = "Waiting time to next eruption (in mins)",
main = "Histogram of waiting times")
})
}
shinyApp(ui = ui, server = server)
print("eehhh")
